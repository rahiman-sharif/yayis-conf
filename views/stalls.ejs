<%- include('partials/header', { title: 'Upcoming Stalls' }) %>

<section class="stalls-hero">
    <div class="hero-overlay"></div>
    <div class="hero-content text-center">
        <div class="breadcrumb-container">
            <a href="/">Home</a> <i class="fas fa-angle-right"></i> <span>Stalls</span>
        </div>
        <h1>Find Our Pop-Up Stalls</h1>
        <p>Come meet us and taste our delicious cakes in person!</p>
    </div>
</section>

<section class="page-section stalls-section">
    <div class="container">
        <% if (stalls && stalls.length > 0) { %>
            <!-- Sort stalls: Current first, then upcoming, then expired -->
            <% 
            const today = new Date();
            today.setHours(0, 0, 0, 0);
            
            // Add isExpired, isCurrent properties to each stall
            const processedStalls = stalls.map(stall => {
                let eventDate;
                let isExpired = false;
                let isCurrent = false;
                let order = 2; // Default order (upcoming)
                
                try {
                    if (stall.dateTime.includes('T')) {
                        eventDate = new Date(stall.dateTime);
                    } else {
                        const dateStr = stall.dateTime.split(',')[0];
                        eventDate = new Date(dateStr);
                    }
                    
                    if (!isNaN(eventDate.getTime())) {
                        const eventDateOnly = new Date(eventDate);
                        eventDateOnly.setHours(0, 0, 0, 0);
                        
                        const tomorrow = new Date(today);
                        tomorrow.setDate(tomorrow.getDate() + 1);
                        
                        if (eventDateOnly.getTime() < today.getTime()) {
                            isExpired = true;
                            order = 3; // Expired
                        } else if (eventDateOnly.getTime() <= tomorrow.getTime()) {
                            isCurrent = true;
                            order = 1; // Current/Today
                        }
                    }
                } catch (e) {
                    console.error('Error parsing date for sorting:', e);
                }
                
                return { ...stall, isExpired, isCurrent, order, eventDate };
            });
            
            // Sort by order (current, upcoming, expired), then by date
            processedStalls.sort((a, b) => {
                if (a.order !== b.order) {
                    return a.order - b.order;
                }
                
                // If same category, sort by date
                if (a.eventDate && b.eventDate) {
                    return a.eventDate - b.eventDate;
                }
                
                return 0;
            });
            %>
            
            <div class="stalls-grid">
                <% processedStalls.forEach(stall => { %>                    <div class="stall-card scroll-animate" data-stall-id="<%= stall.id %>">
                        <div class="stall-card-header">
                            <h3 class="stall-event-name"><i class="fas fa-store-alt"></i><span><%= stall.eventName %></span></h3>
                            <% 
                            // Parse the date from stall.dateTime
                            let eventDate;
                            let statusClass = '';
                            let statusText = '';
                            
                            try {
                                // Check if dateTime is in ISO format or string format
                                if (stall.dateTime.includes('T')) {
                                    eventDate = new Date(stall.dateTime); // ISO format
                                } else {
                                    // Try to parse string format (this is a simple parsing, may need enhancement)
                                    const dateStr = stall.dateTime.split(',')[0]; // Take the date part before first comma
                                    eventDate = new Date(dateStr);
                                }
                                
                                // Get today's date without time component for comparison
                                const today = new Date();
                                today.setHours(0, 0, 0, 0);
                                
                                // Create a tomorrow date for "Current" events
                                const tomorrow = new Date(today);
                                tomorrow.setDate(tomorrow.getDate() + 1);
                                
                                // Compare dates
                                if (!isNaN(eventDate.getTime())) {
                                    // Remove time component for comparison
                                    const eventDateOnly = new Date(eventDate);
                                    eventDateOnly.setHours(0, 0, 0, 0);
                                    
                                    if (eventDateOnly.getTime() < today.getTime()) {
                                        statusClass = 'stall-status-expired';
                                        statusText = 'Expired';
                                    } else if (eventDateOnly.getTime() === today.getTime()) {
                                        statusClass = 'stall-status-current';
                                        statusText = 'Today';
                                    } else if (eventDateOnly.getTime() <= tomorrow.getTime()) {
                                        statusClass = 'stall-status-current';
                                        statusText = 'Tomorrow';
                                    } else {
                                        statusClass = 'stall-status-upcoming';
                                        statusText = 'Upcoming';
                                    }
                                }
                            } catch (e) {
                                console.error('Error parsing date:', e);
                            }
                            %>
                            <% if (statusText) { %>                                <div class="stall-status <%= statusClass %>" aria-label="Event status: <%= statusText %>">
                                    <i class="<%= statusClass === 'stall-status-expired' ? 'fas fa-calendar-times' : statusClass === 'stall-status-current' ? 'fas fa-calendar-check' : 'fas fa-calendar-plus' %>"></i><%= statusText %>
                                </div>
                            <% } %>
                        </div>                        <div class="stall-card-body" style="padding: 15px;">
                            <div class="stall-info-item" style="margin-bottom: 5px;">                                
                                <div class="stall-info-content">
                                    <strong>Date & Time:</strong>
                                    <span>
                                        <% 
                                        let displayDate = 'Not available';
                                        try {
                                            const dateObj = new Date(stall.dateTime);
                                            if (!isNaN(dateObj.getTime())) {
                                                displayDate = dateObj.toLocaleString([], { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', hour12: true });
                                            } else {
                                                displayDate = stall.dateTime; // Show original if it's a non-standard string
                                            }
                                        } catch (e) {
                                            displayDate = stall.dateTime; // Fallback to original string if any error
                                        }
                                        %>
                                        <%= displayDate %>
                                    </span>
                                </div>
                            </div>
                            <div class="stall-info-item" style="margin-bottom: 5px;">
                                <div class="stall-info-content">
                                    <strong>Location:</strong>
                                    <span><%= stall.location %></span>
                                </div>
                            </div>
                            <% if (stall.description) { %>
                                <div class="stall-info-item stall-description-item" style="margin-bottom: 5px;">                                    
                                    <div class="stall-info-content">
                                        <strong>Details:</strong>
                                        <p class="stall-description-text line-clamp-4"><%= stall.description %></p>
                                    </div>
                                </div>
                            <% } %>
                        </div>
                        <% if (stall.mapLink) { %>
                        <div class="stall-card-footer">
                            <a href="<%= stall.mapLink %>" class="btn btn-primary btn-block" target="_blank" rel="noopener noreferrer">
                                <i class="fas fa-map-marked-alt"></i> View Map
                            </a>
                        </div>
                        <% } %>
                    </div>
                <% }); %>
            </div>
        <% } else { %>            <div class="empty-state empty-stalls-state scroll-animate">
                <i class="fas fa-store-alt-slash empty-state-icon"></i>
                <h2 class="empty-state-title">No Stalls Scheduled</h2>
                <p class="empty-state-message">We're planning our next appearances! Please check back soon for updates on where to find us.</p>
                <a href="/menu" class="btn btn-primary mt-3"><i class="fas fa-birthday-cake"></i> View Our Menu</a>
            </div>
        <% } %>
    </div>
</section>

<%- include('partials/footer') %>
